facet_grid(. ~ type) +
scale_x_continuous(limits = c(-25, -1)) +
scale_y_continuous(limits = c(-25, -1)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-2, 2)) +
scale_y_continuous(limits = c(-2, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth(method=lm) +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(1, 5)) +
scale_y_continuous(limits = c(1, 5)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(5, 10)) +
scale_y_continuous(limits = c(5, 10)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
```
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth(method=lm) +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-25, -1)) +
scale_y_continuous(limits = c(-25, -1)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-25, 1)) +
scale_y_continuous(limits = c(-25, 1)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-25, 2)) +
scale_y_continuous(limits = c(-25, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1 +0.001),log(TPM.kit2 + 0.001))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-25, 2)) +
scale_y_continuous(limits = c(-25, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1 +0.001),log(TPM.kit2 + 0.001))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-8, 2)) +
scale_y_continuous(limits = c(-8, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
?runif()
runif(20)
runif() * 0.001
runif(1) * 0.001
runif(1) * 0.001
runif(1) * 0.001
runif(1) * 0.001
runif(1) * 0.01)
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.01
runif(1) * 0.1)
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
runif(1) * 0.1
ggplot(kit_both, aes(log(TPM.kit1 + runif(1) * 0.1),log(TPM.kit2 + runif(1) * 0.1))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-8, 2)) +
scale_y_continuous(limits = c(-8, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1 + runif(1) * 0.1),log(TPM.kit2 + runif(1) * 0.1))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-3, 2)) +
scale_y_continuous(limits = c(-3, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1 + runif(1) * 0.01),log(TPM.kit2 + runif(1) * 0.01))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-3, 2)) +
scale_y_continuous(limits = c(-3, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1 + runif(1) * 0.01),log(TPM.kit2 + runif(1) * 0.01))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-10, 2)) +
scale_y_continuous(limits = c(-10, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1 + runif(1) * 0.01),log(TPM.kit2 + runif(1) * 0.01))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-5, 2)) +
scale_y_continuous(limits = c(-5, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
x = kit_both_enst[kit_both_enst$TPM.kit1 > Cutoff & kit_both_enst$TPM.kit1 > Cutoff,c("TPM.kit1")]
x = kit_both_enst[kit_both_enst$TPM.kit1 > Cutoff & kit_both_enst$TPM.kit1 == Cutoff,]
x = kit_both_enst[kit_both_enst$TPM.kit1 > Cutoff & kit_both_enst$TPM.kit2 == Cutoff,]
x = kit_both_enst[kit_both_enst$TPM.kit1 > Cutoff & kit_both_enst$TPM.kit2 == Cutoff,c("TPM.kit1")]
hist(x)
hist(kit_both_enst[kit_both_enst$TPM.kit1 > Cutoff & kit_both_enst$TPM.kit2 == Cutoff,c("TPM.kit1")])
hist(log(x))
kit1_exclusive = kit_both_enst[kit_both_enst$TPM.kit1 > Cutoff & kit_both_enst$TPM.kit2 == Cutoff,]
kit2_exclusive = kit_both_enst[kit_both_enst$TPM.kit2 > Cutoff & kit_both_enst$TPM.kit1 == Cutoff,]
View(kit1_exclusive)
ggplot(kit1_exclusive,aes(x=TPM.kit1)) +
geom_histogram(alpha=.5,bins = 100,position="identity")
ggplot(kit1_exclusive,aes(log(TPM.kit1)) +
geom_histogram(alpha=.5,bins = 100,position="identity")
ggplot(kit1_exclusive,aes(log(TPM.kit1))) +
geom_histogram(alpha=.5,bins = 100,position="identity")
ggplot(kit2_exclusive,aes(log(TPM.kit2))) +
geom_histogram(alpha=.5,bins = 100,position="identity")
ggplot(kit1_exclusive,aes(log(TPM.kit1))) +
geom_histogram(alpha=.5,bins = 100,position="identity") +
labs(title = "Kit1 exclusive transcripts abundance")
ggplot(kit1_exclusive,aes(log(TPM.kit1))) +
geom_histogram(alpha=.5,bins = 100,position="identity") +
ggtitle(title = "Kit1 exclusive transcripts abundance")
ggplot(kit1_exclusive,aes(log(TPM.kit1))) +
geom_histogram(alpha=.5,bins = 100,position="identity") +
ggtitle("Kit1 exclusive transcripts abundance")
ggplot(kit1_exclusive,aes(log(TPM.kit1))) +
geom_histogram(alpha=.5,bins = 100,position="identity") +
ggtitle("Kit1 exclusive transcripts abundance")
ggplot(kit1_exclusive,aes(log(TPM.kit1))) +
geom_histogram(alpha=.5,bins = 100,position="identity") +
ggtitle("Kit1 exclusive transcripts abundance")
ggplot(kit1_exclusive,aes(log(TPM.kit1))) +
ggtitle("Kit1 exclusive transcripts abundance") +
geom_histogram(alpha=.5,bins = 100,position="identity")
ggplot(kit2_exclusive,aes(log(TPM.kit2))) +
geom_histogram(alpha=.5,bins = 100,position="identity") +
ggtitle("Kit2 exclusive transcripts abundance")
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-25, 2)) +
scale_y_continuous(limits = c(-25, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1 + runif(1) * 0.01),log(TPM.kit2 + runif(1) * 0.01))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-5, 2)) +
scale_y_continuous(limits = c(-5, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-2, 2)) +
scale_y_continuous(limits = c(-2, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-3, 3)) +
scale_y_continuous(limits = c(-3, 3)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-25, 2)) +
scale_y_continuous(limits = c(-25, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-3, 2)) +
scale_y_continuous(limits = c(-3, 2)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-3, 4)) +
scale_y_continuous(limits = c(-3, 4)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
scale_x_continuous(limits = c(-3, 3)) +
scale_y_continuous(limits = c(-3, 3)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
ggplot(kit_both, aes(log(TPM.kit1),log(TPM.kit2))) +
geom_point(size=0.1) +
geom_smooth() +
facet_grid(. ~ type) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed",color="red") +
theme(aspect.ratio = 1)
test_data <- melt(kit_both[,grepl("TPM",colnames(kit_both_ercc))],value.name="TPM")
ggplot(test_data,aes(x=log(TPM + 0.0001),color=variable)) +
stat_bin(data=subset(test_data,variable=="TPM.kit1"),aes(y=cumsum(..count..)),bins=100,geom="step") +
stat_bin(data=subset(test_data,variable=="TPM.kit2"),aes(y=cumsum(..count..)),bins=100,geom="step")
#scale_x_continuous(limits = c(-10, 0)) +
#scale_y_continuous(limits = c(0, 10)) +
test_data <- melt(kit_both[,grepl("TPM",colnames(kit_both_ercc))],value.name="TPM")
ggplot(test_data,aes(x=log(TPM ),color=variable)) +
stat_bin(data=subset(test_data,variable=="TPM.kit1"),aes(y=cumsum(..count..)),bins=100,geom="step") +
stat_bin(data=subset(test_data,variable=="TPM.kit2"),aes(y=cumsum(..count..)),bins=100,geom="step")
#scale_x_continuous(limits = c(-10, 0)) +
#scale_y_continuous(limits = c(0, 10)) +
test_data <- melt(kit_both[,grepl("TPM",colnames(kit_both_ercc))],value.name="TPM")
ggplot(test_data,aes(x=log(TPM + 0.0001),color=variable)) +
stat_bin(data=subset(test_data,variable=="TPM.kit1"),aes(y=cumsum(..count..)),bins=100,geom="step") +
stat_bin(data=subset(test_data,variable=="TPM.kit2"),aes(y=cumsum(..count..)),bins=100,geom="step")
#scale_x_continuous(limits = c(-10, 0)) +
#scale_y_continuous(limits = c(0, 10)) +
test_data <- melt(kit_both[,grepl("TPM",colnames(kit_both_ercc))],value.name="TPM")
ggplot(test_data,aes(x=log(TPM ),color=variable)) +
stat_bin(data=subset(test_data,variable=="TPM.kit1"),aes(y=cumsum(..count..)),bins=100,geom="step") +
stat_bin(data=subset(test_data,variable=="TPM.kit2"),aes(y=cumsum(..count..)),bins=100,geom="step")
#scale_x_continuous(limits = c(-10, 0)) +
#scale_y_continuous(limits = c(0, 10)) +
test_data <- melt(kit_both[,grepl("TPM",colnames(kit_both_ercc))],value.name="TPM")
ggplot(test_data,aes(x=log(TPM ),color=variable)) +
stat_bin(data=subset(test_data,variable=="TPM.kit1"),aes(y=cumsum(..count..)),bins=100,geom="step") +
stat_bin(data=subset(test_data,variable=="TPM.kit2"),aes(y=cumsum(..count..)),bins=100,geom="step")+
ggtitle("TPM vs count of transcripts having that TPM")
#scale_x_continuous(limits = c(-10, 0)) +
#scale_y_continuous(limits = c(0, 10)) +
?library()
library(reshape2,quietly = TRUE)
library(ggplot2)
library(psych)
library(VennDiagram)
Ercc_control<-read.table(file="cms_095046.txt",header=T,sep="\t",comment.char = "",stringsAsFactors = FALSE)
View(Ercc_control)
colnames(Ercc_control)
Ercc_control2<-Ercc_control[,c("ERCC.ID","concentration.in.Mix.1..attomoles.ul.","concentration.in.Mix.2..attomoles.ul.")]
View(Ercc_control2)
colnames(Ercc_control2) <- c("ID","Mix1","Mix2")
colnames(Ercc_control2) <- c("ID","Mix1","Mix2")
Ercc_control2 <- Ercc_control2[order(Ercc_control2$ID),]
View(Ercc_control2)
View(kit_both_ercc)
Ercc_expressed <- kit_both_ercc[,c("TPM.kit1","TPM.kit2","Name")]
View(Ercc_expressed)
Ercc_all <- merge(Ercc_control2,Ercc_expressed,by.x="ID",by.y="name")
Ercc_all <- merge(Ercc_control2,Ercc_expressed,by.x="ID",by.y="Name")
View(Ercc_all)
Ercc <- Ercc_all[,-c("ID")]
Ercc <- Ercc_all[,c("Mix1","Mix2","TPM.kit1","TPM.kit2")]
View(Ercc)
Ercc <- round(Ercc_all[,c("Mix1","Mix2","TPM.kit1","TPM.kit2")],3)
View(Ercc)
View(Ercc_all)
pairs.panels(Ercc_all)
pairs.panels(log(Ercc_all))
cor(Ercc_control2$Mix1,Ercc_expressed$TPM.kit1)
cor(Ercc_control2$Mix2,Ercc_expressed$TPM.kit1)
cor(Ercc_control2$Mix2,Ercc_expressed$TPM.kit2)
cor(Ercc_control2$Mix1,Ercc_expressed$TPM.kit2)
View(Ercc_all)
cor(log(Ercc_control2$Mix1),log(Ercc_expressed$TPM.kit2))
cor(log(Ercc_control2$Mix1 + 0.001),log(Ercc_expressed$TPM.kit + 0.001))
cor(log(Ercc_control2$Mix1 + 0.001),log(Ercc_expressed$TPM.kit1 + 0.001))
cor(log(Ercc_control2$Mix2 + 0.001),log(Ercc_expressed$TPM.kit1 + 0.001))
cor(log(Ercc_control2$Mix2 + 0.001),log(Ercc_expressed$TPM.kit2 + 0.001))
cor(log(Ercc_control2$Mix1 + 0.001),log(Ercc_expressed$TPM.kit2 + 0.001))
plot(Ercc_control2$Mix1)
plot(log(Ercc_control2$Mix1))
Ercc_66 <- log(Ercc_all[Ercc_all$TPM.kit1 > 0 & Ercc_all$TPM.kit2 > 0,]
)
Ercc_66 <- Ercc_all[Ercc_all$TPM.kit1 > 0 & Ercc_all$TPM.kit2 > 0,]
View(Ercc_66)
row.names(Ercc_66) <- Ercc_66$ID
View(Ercc_66)
Ercc_66$ID <- NULL
View(Ercc_66)
Ercc_66_log <- log(Ercc_66)
pairs.panels(Ercc_66)
pairs.panels(Ercc_66_log)
Ercc_missed <- Ercc_all[Ercc_all$TPM.kit1 == 0 | Ercc_all$TPM.kit2 == 0,]
View(Ercc_missed)
library(pheatmap)
pheatmap(Ercc_66)
pheatmap(Ercc_66_log)
?pheatmap
pheatmap(Ercc_66_log,cluster_rows = FALSE,
cluster_cols = FALSE)
Ercc_66_log <- Ercc_66_log[order(Ercc_66$Mix1),]
pheatmap(Ercc_66)
pheatmap(Ercc_66_log,cluster_rows = FALSE,
cluster_cols = FALSE)
Ercc_66_log <- Ercc_66_log[order(Ercc_66$Mix2),]
pheatmap(Ercc_66_log,cluster_rows = FALSE,
cluster_cols = FALSE)
Ercc_66_log <- log(Ercc_66)
Ercc_66_log <- Ercc_66_log[order(Ercc_66_log$Mix2),]
pheatmap(Ercc_66_log,cluster_rows = FALSE,
cluster_cols = FALSE)
Ercc_all_tmp <- Ercc_all
Ercc_all_tmp$missed <- "Present"
View(Ercc_all_tmp)
Ercc_all_tmp$status <- "Present"
Ercc_all_tmp <- Ercc_all
Ercc_all_tmp$status <- "Present"
View(Ercc_all_tmp)
Ercc_all_tmp$status <- ifelse(Ercc_all$TPM.kit1 == 0,"Miss_kit1","Ercc_all_tmp$status")
Ercc_all_tmp$status <- ifelse(Ercc_all$TPM.kit2 == 0,"Miss_kit2","Ercc_all_tmp$status")
Ercc_all_tmp$status <- ifelse(Ercc_all$TPM.kit1 == 0 & Ercc_all$TPM.kit1 == 0,"Miss_both","Ercc_all_tmp$status")
View(Ercc_all_tmp)
Ercc_all_tmp <- Ercc_all
Ercc_all_tmp$status <- "Present"
Ercc_all_tmp$status <- ifelse(Ercc_all$TPM.kit1 == 0,"Miss_kit1",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all$TPM.kit2 == 0,"Miss_kit2",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all$TPM.kit1 == 0 & Ercc_all$TPM.kit1 == 0,"Miss_both",Ercc_all_tmp$status)
View(Ercc_all_tmp)
Ercc_all_tmp <- Ercc_all
Ercc_all_tmp$status <- "Present"
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit1 == 0,"Miss_kit1",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit2 == 0,"Miss_kit2",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit1 == 0 & Ercc_all_tmp$TPM.kit1 == 0,"Miss_both",Ercc_all_tmp$status)
View(Ercc_all_tmp)
Ercc_all_tmp <- Ercc_all
Ercc_all_tmp$status <- "Present"
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit1 == 0,"Miss_kit1",Ercc_all_tmp$status)
View(Ercc_all_tmp)
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit2 == 0,"Miss_kit2",Ercc_all_tmp$status)
View(Ercc_all_tmp)
Ercc_all_tmp <- Ercc_all
Ercc_all_tmp$status <- "Present"
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit1 == 0,"Miss_kit1",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit2 == 0,"Miss_kit2",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit1 == 0 & Ercc_all_tmp$TPM.kit2 == 0,"Miss_both",Ercc_all_tmp$status)
View(Ercc_all_tmp)
ggplot(Ercc_all_tmp, aes(Mix1,Mix2)) +
geom_point(size=0.1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2))) +
geom_point(size=1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2)),color=status) +
geom_point(size=1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2)),fill=status) +
geom_point(size=1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),fill=status)) +
geom_point(size=1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=2)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=2) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
Ercc_all_tmp <- Ercc_all
Ercc_all_tmp$status <- "Present_both"
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit1 == 0,"Miss_kit1",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit2 == 0,"Miss_kit2",Ercc_all_tmp$status)
Ercc_all_tmp$status <- ifelse(Ercc_all_tmp$TPM.kit1 == 0 & Ercc_all_tmp$TPM.kit2 == 0,"Missed_both",Ercc_all_tmp$status)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=1) +
theme(aspect.ratio = 1)
View(Ercc_all_tmp)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=1) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=2) +
scale_x_continuous(limits = c(-10, 15)) +
scale_y_continuous(limits = c(-10, 15)) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=1) +
theme(aspect.ratio = 1)
table(Ercc_all_tmp$status)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix2),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
View(Ercc_all_tmp)
pheatmap(Ercc_all_tmp)
pheatmap(Ercc_all_tmp,cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(Ercc_all,cluster_rows = FALSE, cluster_cols = FALSE)
Ercc_control<-read.table(file="cms_095046.txt",header=T,sep="\t",comment.char = "",stringsAsFactors = FALSE)
# select dataset
Ercc_control2<-Ercc_control[,c("ERCC.ID","concentration.in.Mix.1..attomoles.ul.","concentration.in.Mix.2..attomoles.ul.")]
# Change column names
colnames(Ercc_control2) <- c("ID","Mix1","Mix2")
#Ercc_control2 <- Ercc_control2[order(Ercc_control2$ID),]
Ercc_expressed <- kit_both_ercc[,c("TPM.kit1","TPM.kit2","Name")]
# Merge the mis concentration alognwith transcript abundance
Ercc_all <- merge(Ercc_control2,Ercc_expressed,by.x="ID",by.y="Name")
View(Ercc_all)
View(Ercc_all)
Ercc_66 <- Ercc_all[Ercc_all$TPM.kit1 > 0 & Ercc_all$TPM.kit2 > 0,]
row.names(Ercc_66) <- Ercc_66$ID
Ercc_66$ID <- NULL
Ercc_66_log <- log(Ercc_66)
View(Ercc_all)
View(Ercc_all_tmp)
View(Ercc_all)
temp <- melt(Ercc_all_tmp)
View(temp)
ggplot(Ercc_all_tmp, aes(log(Mix1),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(log(Mix1),log(Mix1),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(Name,log(Mix1),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(ID,log(Mix1),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(ID,log(Mix2),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(ID,log(Mix1),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(ID,log(Mix2),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
ggplot(Ercc_all_tmp, aes(ID,log(Mix1),color=status)) +
geom_point(size=3) +
theme(aspect.ratio = 1)
pairs.panels(Ercc_66_log)
venn.diagram(x=list("Kit1"=kit1,"Kit2"=kit2),filename="enst.png",imagetype="png",fill = c("skyblue", "pink1"),scaled = TRUE, main="ENST transcripts comparision",main.cex=1)
venn.diagram(x=list("Kit1"=kit1,"Kit2"=kit2),filename="ercc.png",imagetype="png",fill = c("skyblue", "pink1"),scaled = TRUE,main="ERCC transcripts comparision",main.cex=2)
venn.diagram(x=list("Kit1"=kit1,"Kit2"=kit2),filename="ercc.png",imagetype="png",fill = c("skyblue", "pink1"),scaled = TRUE,main="ERCC transcripts comparision",main.cex=2)
venn.diagram(x=list("Kit1"=kit1,"Kit2"=kit2),filename="enst.png",imagetype="png",fill = c("skyblue", "pink1"),scaled = TRUE, main="ENST transcripts comparision",main.cex=2)
Cutoff <- 0
kit1 <- kit_both_ercc[kit_both_ercc$TPM.kit1 > Cutoff,c("Name")]
kit2 <- kit_both_ercc[kit_both_ercc$TPM.kit2 > Cutoff,c("Name")]
venn.diagram(x=list("Kit1"=kit1,"Kit2"=kit2),filename="ercc.png",imagetype="png",fill = c("skyblue", "pink1"),scaled = TRUE,main="ERCC transcripts comparision",main.cex=2)
Cutoff <- 0
kit1 <- kit_both_enst[kit_both_enst$TPM.kit1 > Cutoff,c("Name")]
kit2 <- kit_both_enst[kit_both_enst$TPM.kit2 > Cutoff,c("Name")]
venn.diagram(x=list("Kit1"=kit1,"Kit2"=kit2),filename="enst.png",imagetype="png",fill = c("skyblue", "pink1"),scaled = TRUE, main="ENST transcripts comparision",main.cex=2)
table(Ercc_all_tmp$status)
